---

# Project source code URL: https://github.com/woodpecker-ci/woodpecker

woodpecker_ci_server_enabled: true

# renovate: datasource=docker depName=woodpeckerci/woodpecker-server
woodpecker_ci_server_version: v3.5.2

woodpecker_ci_server_identifier: woodpecker-ci-server

woodpecker_ci_server_scheme: https

# woodpecker_ci_server_hostname is the fully-qualified domain name of your Woodpecker CI host (e.g. `woodpecker.DOMAIN`)
woodpecker_ci_server_hostname: ''

# The path at which Woodpecker CI is served.
# This value must either be `/` or not end with a slash (e.g. `/ci`).
woodpecker_ci_server_path_prefix: /

woodpecker_ci_server_uid: ''
woodpecker_ci_server_gid: ''

woodpecker_ci_server_container_image: "{{ woodpecker_ci_server_container_image_registry_prefix }}woodpeckerci/woodpecker-server:{{ woodpecker_ci_server_container_image_tag }}"
woodpecker_ci_server_container_image_tag: "{{ woodpecker_ci_server_version }}"
woodpecker_ci_server_container_image_force_pull: "{{ woodpecker_ci_server_container_image.endswith(':latest') }}"
woodpecker_ci_server_container_image_registry_prefix: docker.io/

woodpecker_ci_server_base_path: "/{{ woodpecker_ci_server_identifier }}"
woodpecker_ci_server_data_dir_path: "{{ woodpecker_ci_server_base_path }}/data"

woodpecker_ci_server_http_bind_port: ''
woodpecker_ci_server_https_bind_port: ''

# woodpecker_ci_server_container_add_host_domain_name and woodpecker_ci_server_container_add_host_ip_address
# allow you to add a new host entry (domain name to IP address mapping) to the container.
woodpecker_ci_server_container_add_host_domain_name: ''
woodpecker_ci_server_container_add_host_ip_address: ''

# woodpecker_ci_server_config_host controls WOODPECKER_HOST - Server fully qualified url, without the root path prefix.
# See: https://woodpecker-ci.org/docs/administration/server-config#woodpecker_host
# See: woodpecker_ci_server_config_root_url
woodpecker_ci_server_config_host: "{{ woodpecker_ci_server_scheme }}://{{ woodpecker_ci_server_hostname }}"

# woodpecker_ci_server_config_root_url controls WOODPECKER_ROOT_URL - path prefix.
# See: https://woodpecker-ci.org/docs/administration/server-config#woodpecker_root_url
woodpecker_ci_server_config_root_url: "{{ woodpecker_ci_server_path_prefix }}"

# woodpecker_ci_server_config_open controls WOODPECKER_OPEN - whether user registration is allowed
# See: https://woodpecker-ci.org/docs/administration/server-config#woodpecker_open
woodpecker_ci_server_config_open: true

# woodpecker_ci_server_config_server_addr_port controls the port part of WOODPECKER_SERVER_ADDR
# Also see `woodpecker_ci_server_config_server_addr`
woodpecker_ci_server_config_server_addr_port: 8000

# woodpecker_ci_server_config_server_addr controls WOODPECKER_SERVER_ADDR - Configures the HTTP listener port.
# See: https://woodpecker-ci.org/docs/administration/server-config#woodpecker_server_addr
woodpecker_ci_server_config_server_addr: ":{{ woodpecker_ci_server_config_server_addr_port }}"

# woodpecker_ci_server_config_admin controls WOODPECKER_ADMIN (a comma-separated list of admin accounts)
#
# See: https://woodpecker-ci.org/docs/administration/server-config#woodpecker_admin
#
# Note: you're supposed to provide users as a list of strings here, not a comma-separated string
# like in `woodpecker_ci_server_config_admin`
woodpecker_ci_server_config_admins: []

# woodpecker_ci_server_config_admin controls WOODPECKER_ADMIN (a comma-separated list of admin accounts)
#
# See: https://woodpecker-ci.org/docs/administration/server-config#woodpecker_admin
woodpecker_ci_server_config_admin: "{{ woodpecker_ci_server_config_admins | join(',') }}"

# woodpecker_ci_server_config_agent_secret controls WOODPECKER_AGENT_SECRET -
# A shared secret used by server and agents to authenticate communication. A secret can be generated by `openssl rand -hex 32`
woodpecker_ci_server_config_agent_secret: ''

# woodpecker_ci_server_config_grpc_addr_port controls the port part of WOODPECKER_GRPC_ADDR
# Also see `woodpecker_ci_server_config_grpc_addr`
woodpecker_ci_server_config_grpc_addr_port: 9000

# woodpecker_ci_server_config_grpc_addr controls WOODPECKER_GRPC_ADDR - Configures the gRPC listener port.
# See: https://woodpecker-ci.org/docs/administration/server-config#woodpecker_grpc_addr
woodpecker_ci_server_config_grpc_addr: ":{{ woodpecker_ci_server_config_grpc_addr_port }}"

# woodpecker_ci_server_config_log_level configures the logging level.
# Valid values: 'trace', 'debug', 'info', 'warn', 'error', 'fatal', 'panic', 'disabled' and empty ('')
#
# See: https://woodpecker-ci.org/docs/administration/server-config#woodpecker_log_level
woodpecker_ci_server_config_log_level: info

# woodpecker_ci_server_provider specifies the source-code provider (Github, Gitlab, Gitea, Forgejo, ..)
# See: https://woodpecker-ci.org/docs/administration/vcs/overview
woodpecker_ci_server_provider: ''


######################################
# Gitea-specific                     #
######################################

# woodpecker_ci_server_gitea_server specifies the URL to the Gitea server.
# Example: https://woodpecker-ci.org/docs/administration/forges/gitea#woodpecker_gitea_url
woodpecker_ci_server_config_gitea_url: ''

woodpecker_ci_server_config_gitea_client: ''
woodpecker_ci_server_config_gitea_secret: ''

woodpecker_ci_server_config_gitea_skip_verify: false

######################################
# /Gitea-specific                    #
######################################


######################################
# github-specific                    #
######################################

woodpecker_ci_server_config_github_url: 'https://github.com'

woodpecker_ci_server_config_github_client: ''
woodpecker_ci_server_config_github_secret: ''
woodpecker_ci_server_config_github_skip_verify: false

######################################
# /github-specific                   #
######################################


######################################
# Forgejo-specific                   #
######################################

# woodpecker_ci_server_forgejo_server specifies the URL to the Forgejo server.
# Example: https://woodpecker-ci.org/docs/administration/forges/forgejo#woodpecker_forgejo_url
woodpecker_ci_server_config_forgejo_url: ''

woodpecker_ci_server_config_forgejo_client: ''
woodpecker_ci_server_config_forgejo_secret: ''

woodpecker_ci_server_config_forgejo_skip_verify: false

######################################
# /Forgejo-specific                  #
######################################

# Docker images to run in privileged mode. Only change if you are sure what you do!
# You should specify the tag of your images too, as this enforces exact matches.
# Example: `woodpeckerci/plugin-docker-buildx:5.2.0`
woodpecker_ci_server_config_plugins_privileged: ''


# woodpecker_ci_server_database_driver configures the database driver
# Valid values: sqlite3, postgres, ymsql
#
# See: https://woodpecker-ci.org/docs/administration/database
woodpecker_ci_server_database_driver: sqlite3

# woodpecker_ci_server_database_datasource configures the URI or filepath where the database can be reached.
# This is dependant on `woodpecker_ci_server_database_driver`
woodpecker_ci_server_database_datasource: /data/database.sqlite

woodpecker_ci_server_systemd_required_systemd_services_list: "{{ woodpecker_ci_server_systemd_required_systemd_services_list_default + woodpecker_ci_server_systemd_required_systemd_services_list_auto + woodpecker_ci_server_systemd_required_systemd_services_list_custom }}"
woodpecker_ci_server_systemd_required_systemd_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
woodpecker_ci_server_systemd_required_systemd_services_list_auto: []
woodpecker_ci_server_systemd_required_systemd_services_list_custom: []

# woodpecker_ci_server_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `roles/custom/gitea/templates/labels.j2` for details.
#
# To inject your own other container labels, see `woodpecker_ci_server_container_labels_additional_labels`.
woodpecker_ci_server_container_labels_traefik_enabled: true
woodpecker_ci_server_container_labels_traefik_docker_network: "{{ woodpecker_ci_server_identifier }}"
woodpecker_ci_server_container_labels_traefik_hostname: "{{ woodpecker_ci_server_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/ci`).
woodpecker_ci_server_container_labels_traefik_path_prefix: "{{ woodpecker_ci_server_path_prefix }}"
woodpecker_ci_server_container_labels_traefik_rule: "Host(`{{ woodpecker_ci_server_container_labels_traefik_hostname }}`){% if woodpecker_ci_server_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ woodpecker_ci_server_container_labels_traefik_path_prefix }}`){% endif %}"
woodpecker_ci_server_container_labels_traefik_priority: 0
woodpecker_ci_server_container_labels_traefik_entrypoints: web-secure
woodpecker_ci_server_container_labels_traefik_tls: "{{ woodpecker_ci_server_container_labels_traefik_entrypoints != 'web' }}"
woodpecker_ci_server_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls whether a compression middleware will be injected into the middlewares list.
# This compression middleware is supposed to be defined elsewhere (using labels or a File provider, etc.) and is merely referenced by this router.
woodpecker_ci_server_container_labels_traefik_compression_middleware_enabled: false
woodpecker_ci_server_container_labels_traefik_compression_middleware_name: ""

# woodpecker_ci_server_container_labels_traefik_grpc_enabled controls whether
# to expose the gRPC port externally.  Set this to true if you plan to run Woodpecker agents
# on separate machines/networks.
woodpecker_ci_server_container_labels_traefik_grpc_enabled: false
# The following regexp is used to match the Protobuf endpoints.
#
# Note that even if you are serving Woodpecker under a prefix (e.g., `/ci`), these endpoints will *not*
# use the prefix.  For example, if your Woodpecker server instance lives at https://example.com/ci, these
# endpoints will respond at https://example.com/proto.Woodpecker(Auth)?.
#
# This setup has been inspired by:
# https://www.nemunai.re/post/woodpecker-ci-mixing-http-grpc-on-one-domain-nginx/
woodpecker_ci_server_container_labels_traefik_grpc_path_prefix_woodpecker: '/proto.Woodpecker'
woodpecker_ci_server_container_labels_traefik_grpc_path_prefix_woodpeckerauth: '/proto.WoodpeckerAuth'
woodpecker_ci_server_container_labels_traefik_grpc_rule: "Host(`{{ woodpecker_ci_server_container_labels_traefik_hostname }}`) && (PathPrefix(`{{ woodpecker_ci_server_container_labels_traefik_grpc_path_prefix_woodpecker }}`) || PathPrefix(`{{ woodpecker_ci_server_container_labels_traefik_grpc_path_prefix_woodpeckerauth }}`))"
woodpecker_ci_server_container_labels_traefik_grpc_priority: 0
woodpecker_ci_server_container_labels_traefik_grpc_entrypoints: web-secure
woodpecker_ci_server_container_labels_traefik_grpc_tls: "{{ woodpecker_ci_server_container_labels_traefik_grpc_entrypoints != 'web' }}"
woodpecker_ci_server_container_labels_traefik_grpc_tls_certResolver: default  # noqa var-naming

# Controls which additional headers to attach to all HTTP responses.
# To add your own headers, use `woodpecker_ci_server_container_labels_traefik_additional_response_headers_custom`
woodpecker_ci_server_container_labels_traefik_additional_response_headers: "{{ woodpecker_ci_server_container_labels_traefik_additional_response_headers_auto | combine(woodpecker_ci_server_container_labels_traefik_additional_response_headers_custom) }}"
woodpecker_ci_server_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': woodpecker_ci_server_http_header_xss_protection} if woodpecker_ci_server_http_header_xss_protection else {})
    | combine ({'X-Frame-Options': woodpecker_ci_server_http_header_frame_options} if woodpecker_ci_server_http_header_frame_options else {})
    | combine ({'X-Content-Type-Options': woodpecker_ci_server_http_header_content_type_options} if woodpecker_ci_server_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': woodpecker_ci_server_http_header_content_security_policy} if woodpecker_ci_server_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': woodpecker_ci_server_http_header_content_permission_policy} if woodpecker_ci_server_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': woodpecker_ci_server_http_header_strict_transport_security} if woodpecker_ci_server_http_header_strict_transport_security and woodpecker_ci_server_container_labels_traefik_tls else {})
  }}
woodpecker_ci_server_container_labels_traefik_additional_response_headers_custom: {}

# woodpecker_ci_server_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `roles/custom/woodpecker_ci_server/templates/labels.j2` for details.
#
# Example:
# woodpecker_ci_server_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
woodpecker_ci_server_container_labels_additional_labels: ''

# woodpecker_ci_server_container_additional_environment_variables contains a multiline string with additional environment variables to pass to the container.
#
# Example:
# woodpecker_ci_server_container_additional_environment_variables: |
#   VAR=1
#   ANOTHER=value
woodpecker_ci_server_container_additional_environment_variables: ''

woodpecker_ci_server_container_network: woodpecker-ci

# A list of additional container networks that the container would be connected to.
# The playbook does not create these networks, so make sure they already exist.
woodpecker_ci_server_container_additional_networks: "{{ woodpecker_ci_server_container_additional_networks_auto + woodpecker_ci_server_container_additional_networks_custom }}"
woodpecker_ci_server_container_additional_networks_auto: []
woodpecker_ci_server_container_additional_networks_custom: []


# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
woodpecker_ci_server_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Frame-Options` header which controls whether framing can happen.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
woodpecker_ci_server_http_header_frame_options: SAMEORIGIN

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
woodpecker_ci_server_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
woodpecker_ci_server_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
woodpecker_ci_server_http_header_content_permission_policy: "{{ 'interest-cohort=()' if woodpecker_ci_server_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
woodpecker_ci_server_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if woodpecker_ci_server_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `woodpecker_ci_server_content_permission_policy`
woodpecker_ci_server_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `woodpecker_ci_server_http_header_strict_transport_security`
woodpecker_ci_server_hsts_preload_enabled: false
